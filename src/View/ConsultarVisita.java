package View;

import DAO.ClientDAO;
import DAO.DataClientVisitDAO;
import Model.Client;
import Model.DataClientVisit;
import Model.Visita;
import Model.VisitaClientDataDetails;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import java.io.FileNotFoundException;
import java.nio.charset.Charset;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

public class ConsultarVisita extends javax.swing.JFrame {

    VisitaClientDataDetails visitaClientDataDetails;
    int aux = 0;
    Client client;

    public ConsultarVisita(int id) {
        aux = id;
        visitaClientDataDetails = DataClientVisitDAO.GetAllVisitByClientId(id);
        client = ClientDAO.GetClientById(id);
        if (visitaClientDataDetails.getVisitaList().isEmpty() || visitaClientDataDetails.getDataClientVisitList().isEmpty()) {
            ConsultarVisita.this.setVisible(false);
            CadastrarDados alterar = new CadastrarDados(id);
            alterar.setVisible(true);
        }else{
            ConsultarVisita.this.setVisible(true);
        }
        initComponents();
        jLabel1.setText("Dados de Consulta do Paciente: " + client.getNome());
        ConsultarTudo();
    }

    public ConsultarVisita() {
        ConsultarVisita.this.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jScrollPane2.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Visita", "Visita Nº", "Data Visita", "Olho", "Visão"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("Consultar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setText("Dados de Consulta do Paciente: ");

        jButton5.setText("Atualizar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Gerar Relatório");
        jButton2.setPreferredSize(new java.awt.Dimension(87, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void ConsultarTudo() {
        ArrayList<Visita> visitaList = new ArrayList<>(visitaClientDataDetails.getVisitaList());
        ArrayList<DataClientVisit> dataClientVisitList = new ArrayList<>(visitaClientDataDetails.getDataClientVisitList());
        int visaoAux = 0;
        int olhoAux = 0;
        DefaultTableModel tbm = (DefaultTableModel) jTable1.getModel();

        int i = 0;
        while (tbm.getRowCount() > 0) {
            tbm.removeRow(0);
        }
        int aux;
        // fazer o laço for para pegar cada registro e colocar na tela.
        for (Visita visita : visitaList) {
            tbm.addRow(new String[i]);
            aux = i + 1;
            for (DataClientVisit dataClientVisit : dataClientVisitList) {
                if (visita.getId() == dataClientVisit.getVisitaId()) {
                    visaoAux = dataClientVisit.getVision();
                    olhoAux = dataClientVisit.getEye();
                    break;
                }
            }

            jTable1.setValueAt(visita.getId(), i, 0);
            jTable1.setValueAt("#" + aux + "", i, 1);
            jTable1.setValueAt(visita.getDataVisit(), i, 2);
            jTable1.setValueAt(olhoAux + "%", i, 3);
            jTable1.setValueAt(visaoAux + "%", i, 4);
            i++;
        }

    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CadastrarDados alterar = new CadastrarDados(aux);
        alterar.setVisible(true);
        ConsultarVisita.this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ConsultarTudo();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Voltar para a tela de pacientes
        ConsultarPaciente consultar = new ConsultarPaciente();
        consultar.setVisible(true);
        ConsultarVisita.this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //GERAR RELATÓRIO
        DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern("dd/MM/yy");
        String dateEmission = dtf2.format(LocalDateTime.now());

        int i = 0;
        boolean response = true;
        ArrayList<Visita> visitaList = new ArrayList<>(visitaClientDataDetails.getVisitaList());
        ArrayList<DataClientVisit> dataClientVisitList = new ArrayList<>(visitaClientDataDetails.getDataClientVisitList());
        int visaoAux = 0;
        int olhoAux = 0;
        Document document = new Document();
        String path = "..\\ClinicaOftalmologia\\Files\\";
        String fileName = getRandomName();
        String pathCombine = path + fileName + ".pdf";

        try {
            PdfWriter.getInstance(document, new FileOutputStream(pathCombine));
            document.open();

            document.add(new Paragraph("                  Nome Paciente: " + client.getNome() + "                       DATA EMISSÃO DO RELATÓRIO: " + dateEmission));
            document.add(new Paragraph(" "));
            document.add(new Paragraph(" "));
            document.add(new Paragraph("Dados             VisitaId               Visita Nº               Data da Visita               OLHO               VISÃO"));

            int aux;
            // fazer o laço for para pegar cada registro e colocar na tela.
            for (Visita visita : visitaList) {
                aux = i + 1;
                for (DataClientVisit dataClientVisit : dataClientVisitList) {
                    if (visita.getId() == dataClientVisit.getVisitaId()) {
                        visaoAux = dataClientVisit.getVision();
                        olhoAux = dataClientVisit.getEye();
                        break;
                    }
                }
                document.add(new Paragraph("                          " + visita.getId() + "                      #" + aux + "                      " + visita.getDataVisit() + "                        " + olhoAux + "%                   " + visaoAux + "%"));

                i++;
            }

        } catch (DocumentException | FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            response = false;
        }
        document.close();
        if (response) {
            JOptionPane.showMessageDialog(null, "Documento Criado");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    private String getRandomName() {
        int i = 8;
        // bind the length 
        byte[] bytearray = new byte[256];
        //byte[] bytearray;
        String mystring;
        StringBuffer thebuffer;
        String theAlphaNumericS;

        new Random().nextBytes(bytearray);

        mystring = new String(bytearray, Charset.forName("UTF-8"));

        thebuffer = new StringBuffer();

        //remove all spacial char 
        theAlphaNumericS = mystring.replaceAll("[^A-Z0-9]", "");

        //random selection
        for (int m = 0; m < theAlphaNumericS.length(); m++) {

            if (Character.isLetter(theAlphaNumericS.charAt(m))
                    && (i > 0)
                    || Character.isDigit(theAlphaNumericS.charAt(m))
                    && (i > 0)) {

                thebuffer.append(theAlphaNumericS.charAt(m));
                i--;
            }
        }

        // the resulting string 
        return thebuffer.toString();
    }
}
